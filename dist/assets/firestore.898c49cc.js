import{k as u,q as e,x as i,p as s,s as o,n as g,l as p,y,z as d}from"./index.14df926a.js";const h=u("firestore",{state:()=>({db:e,storage:i}),actions:{async addUser(t,a={}){try{await s(o(e,"users",t),a,{...t}),alert("User added! :)")}catch(r){console.log(r)}},async addProduct(t){try{await s(o(e,"products",t.id),{...t}),alert("Product added! :)")}catch(a){console.log(a)}},async getProducts(){const t=g(e,"products");try{const{docs:a}=await p(t);return a.map(c=>({...c.data()}))}catch(a){console.log(a)}console.log(products)},async editProduct(t,a){try{await s(o(e,"products",t),a),alert("Edit successful")}catch(r){console.log(r)}},async deleteProduct(t){try{await y(o(e,"products",t)),alert("Deleted product successfully")}catch(a){console.log(a)}},async getIndiProduct(t){const a=o(e,"products",t);try{return(await d(a)).data()}catch(r){console.log(r)}},async getUser(t){const a=o(e,"users",t);try{return(await d(a)).data()}catch(r){console.log(r)}},addUserRating(t,a){const r=o(e,"users",t);s(r,{rating:a},{merge:!0})},addProductRating(t,a){const r=o(e,"products",t);s(r,{ratingList:a},{merge:!0})},changeRating(t){let a=0,r=t.ratingList;r.push(t.rating),r.forEach(function(l){a+=l});let c=a/r.length;const n=o(e,"products",t.id);s(n,{rating:c},{merge:!0})}}});export{h as u};
